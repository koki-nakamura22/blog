<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WSL on Koki&#39;s personal blog</title>
    <link>https://koki-nakamura22.github.io/blog/categories/wsl/</link>
    <description>Recent content in WSL on Koki&#39;s personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Powered by Hugo. Copyright Â© 2022 Koki NAKAMURA</copyright>
    <lastBuildDate>Thu, 24 Feb 2022 10:34:12 +0900</lastBuildDate><atom:link href="https://koki-nakamura22.github.io/blog/categories/wsl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04)</title>
      <link>https://koki-nakamura22.github.io/blog/posts/haskell/setup-haskell-dev-env-on-wsl2/</link>
      <pubDate>Thu, 24 Feb 2022 10:34:12 +0900</pubDate>
      
      <guid>https://koki-nakamura22.github.io/blog/posts/haskell/setup-haskell-dev-env-on-wsl2/</guid>
      <description>This article explains how to set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04).
The following lists are the table of contents about this article.
Target audience Environment Preconditions Set up the development environment 1. Install 2. Create a project 3. Prepare to enable build the project 4. Check setting up the development environment successful 5. Install VS Code extensions for development with Haskell Reference articles Target audience Those who want to set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04). Environment Windows 10 (Ver. 21H2, Build. 19044.1526) WSL 2 (Ubuntu 20.04 LTS) Preconditions Install WSL 2 (Ubuntu 20.04 LTS) to Windows 10 Install VS Code to WSL 2 Set up the development environment 1. Install wget -qO- https://get.haskellstack.org/ | sh 2. Create a project stack new [your project name] 3. Prepare to enable build the project cd [your project name] stack setup stack build 4.</description>
    </item>
    
    <item>
      <title>Installing pyenv, and Python by pyenv on WSL (Ubuntu 18.04 LTS)</title>
      <link>https://koki-nakamura22.github.io/blog/posts/python/installing-pyenv-pyenv-on-wsl-ubuntu1804/</link>
      <pubDate>Sun, 26 Apr 2020 20:26:18 +1000</pubDate>
      
      <guid>https://koki-nakamura22.github.io/blog/posts/python/installing-pyenv-pyenv-on-wsl-ubuntu1804/</guid>
      <description>This article explains how to install pyenv, and Python by pyenv on WSL (Ubuntu 18.04 LTS).
The following lists are the table of contents about this article.
Target audience Environment Preconditions Installing pyenv Installing Python by pyenv Installing libraries that need for installing Python Installing Python Reference articles Target audience Those who want to install pyenv and Python on WSL. Environment WSL (Ubuntu 18.04 LTS) Preconditions Already installed git. Installing pyenv Execution the following commands.
git clone https://github.com/pyenv/pyenv.git ~/.pyenv echo &amp;#39;export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile echo &amp;#39;export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile echo -e &amp;#39;if command -v pyenv 1&amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then\n eval &amp;#34;$(pyenv init -)&amp;#34;\nfi&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile exec &amp;#34;$SHELL&amp;#34; Then reboot WSL for applying the setting.
Installation of pyenv is now complete.
Installing Python by pyenv Installing libraries that need for installing Python Execution the following command.
sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev Installing Python Execution the following command, then setting Python version that will use.</description>
    </item>
    
  </channel>
</rss>
