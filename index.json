[{
    "title": "CSRF Token Authentication in Django REST framework",
    "date": "",
    "description": "A guide on how to implement CSRF token authentication in Web APIs using Django REST framework.",
    "body": "This article explains how to implement CSRF token authentication in Web APIs using Django REST framework..\nThe following lists are the table of contents about this article.\n Target Audience Environment Prerequisites How to Implement CSRF Token Authentication  Why Implement CSRF Token Authentication? Implementing an API to Return CSRF Tokens Creating the Authentication Class Setting APIView Points to Note for Testing    Target Audience  Those developing REST APIs using Django REST framework. Individuals interested in mechanisms to prevent data tampering. Those with basic knowledge of CSRF token authentication.  Environment Here is the environment in which the author confirmed the operation:\n Python 3.11 Django 4.2.2 Django REST framework 3.14.0  Prerequisites  Django and Django REST framework should be installed. A Django project should already be set up. Familiarity with the basic concepts of REST APIs.  How to Implement CSRF Token Authentication Why Implement CSRF Token Authentication? Even in REST API development, there may be a need to introduce mechanisms to prevent tampering of form submission data.\nBy implementing CSRF token authentication, you can include the CSRF token in the header when sending requests such as POST, PUT, PATCH, and DELETE to the server.\nThis allows you to verify and detect/block tampered form submission data.\nHowever, note that this goes against the best practices of REST APIs, which prohibit maintaining state.\nImplementing an API to Return CSRF Tokens First, we need to implement an API that issues and returns a CSRF token.\nImplement the following code in the file where you\u0026rsquo;re building your Web API, and register it in urls.py to make it externally accessible.\nIn this case, we\u0026rsquo;ll create an apis.py file under the directory where models.py and views.py are located.\nfrom typing import Self from rest_framework.request import Request from rest_framework.response import Response from rest_framework.views import APIView class CSRFTokens(APIView): def get(self: Self, request: Request) -\u0026gt; Response: return Response({\u0026#34;token\u0026#34;: get_token(request)}) Creating the Authentication Class Next, we\u0026rsquo;ll implement the code for CSRF token authentication.\nCreate an authentications.py file under the directory where models.py and views.py are located and add the following code.\nfrom rest_framework.authentication import SessionAuthentication class CSRFOnlySessionAuthentication(SessionAuthentication): def authenticate(self, request): self.enforce_csrf(request) return None Setting APIView Then, setting the authentication class you\u0026rsquo;ve created in your APIView. Below is a sample code:\nfrom rest_framework.views import APIView from .authentications import CSRFOnlySessionAuthentication class SampleResources(APIView): authentication_classes = [CSRFOnlySessionAuthentication] # Other methods such as get or post Points to Note for Testing When testing this authentication method in test code, if you don\u0026rsquo;t pass enforce_csrf_checks=True when initializing the APIClient, CSRF token authentication will be ignored. If you\u0026rsquo;re testing for the presence or verification of the CSRF token, always initialize the APIClient with the parameter enforce_csrf_checks=True as shown below:\nfrom rest_framework.test import APIClient client = APIClient(enforce_csrf_checks=True) ",
    "ref": "/blog/posts/django/csrf-protect-on-django-rest-framework/"
  },{
    "title": "How to Install pyenv on WSL2 Ubuntu 22.04",
    "date": "",
    "description": "In this article, we'll walk you through the steps to install pyenv on Ubuntu 22.04 running on WSL2. From introducing the packages needed for pyenv's installation to setting up pyenv itself, we cover the complete process.",
    "body": "In this article, we\u0026rsquo;ll walk you through the steps to install pyenv on Ubuntu 22.04 running on WSL2. From introducing the packages needed for pyenv\u0026rsquo;s installation to setting up pyenv itself, we cover the complete process.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Contents  1. Installing Necessary Packages 2. Installing pyenv 3. Initial Configuration for pyenv   Reference articles  Target audience  Those using WSL2 Individuals looking to manage Python versions efficiently Those aiming to install pyenv on Ubuntu  Environment  WSL2 Ubuntu 22.04  Preconditions  Can access to the internet  Contents 1. Installing Necessary Packages First, we need to install the packages required for pyenv. Execute the following command:\nsudo apt install -y gcc make build-essential libssl-dev libffi-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev liblzma-dev 2. Installing pyenv Next, we\u0026rsquo;ll use the official installation script to get pyenv set up.\ncurl https://pyenv.run | bash 3. Initial Configuration for pyenv Lastly, set up the environment variables for pyenv. Add the following lines to your .bashrc:\nexport PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34; command -v pyenv \u0026gt;/dev/null || export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34; eval \u0026#34;$(pyenv init -)\u0026#34; With these steps, you should now have pyenv installed and ready to use on Ubuntu 22.04 on WSL2.\nReference articles  Install Pyenv on Ubuntu 22.04 Ubuntu に pyenv を利用して Python をインストールする  ",
    "ref": "/blog/posts/python/installing-pyenv-pyenv-on-wsl-ubuntu2204/"
  },{
    "title": "What to do when an error message is displayed when launching WSL2 Ubuntu and it cannot be started",
    "date": "",
    "description": "When installing Ubuntu for WSL2 through the Microsoft Store, you might encounter error messages upon startup. This article explains how to solve such issues.",
    "body": "When you install Ubuntu for WSL2 via the Microsoft Store, there\u0026rsquo;s a chance you might face error messages upon launch. This article provides guidance on how to address these issues.\nTable of Contents here.\n Target Audience Environment Prerequisites Issues with Microsoft Store Installation How to Resolve the Issue  1. Uninstalling Ubuntu on WSL2 2. Installing Ubuntu on WSL2 via Command Line Side Note: Checking Available Distributions    Target Audience  Those encountering error messages when starting WSL2 Ubuntu  Environment  Windows 10 or newer versions A setup where WSL2 can be utilized  Prerequisites  Activation of the Windows Subsystem for Linux (WSL)  Issues with Microsoft Store Installation Upon installing Ubuntu for WSL2 via the Microsoft Store, you might see the following error messages, and Ubuntu on WSL2 might fail to start:\nCommand not found. Command not found. Command not found. Please press any key... It appears that these issues can arise when installing through the store.\nLet\u0026rsquo;s proceed to the next section to resolve this problem.\nHow to Resolve the Issue 1. Uninstalling Ubuntu on WSL2 First, uninstall Ubuntu on WSL2.\nYou can do this either through command-line or via Settings → Apps → Installed Apps.\n2. Installing Ubuntu on WSL2 via Command Line Use the command below to install Ubuntu on WSL2.\nIn this example, we\u0026rsquo;re installing Ubuntu 22.04.\nwsl --install -d Ubuntu-22.04 Side Note: Checking Available Distributions If you wish to see a list of available distributions, execute the following command:\nwsl --list --online From the displayed NAME column, specify the name of the distribution you want after the -d flag to install it.\n",
    "ref": "/blog/posts/other/resolve-wsl2-launch-error/"
  },{
    "title": "Setting Hugo article URLs structure as the same as under /content/ structure.",
    "date": "",
    "description": "This article explains how to setting Hugo article URLs structure as the same as under /content directory structure.",
    "body": "This article explains how to setting Hugo article URLs structure as the same as under /content directory structure.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Update Hugo Change setting to the config file. Example Reference articles  Target audience  Those who want to organize the posts by category, and setting URLs structure as the same as under /content directory structure.  Environment  WSL 2 (Ubuntu 20.04 LTS) Hugo Homebrew  Preconditions  Installed Hugo Installed Homebrew  Update Hugo If your Hugo version is 0.83.0 or later, skip this section.\nIf not, you need to upgrade Hugo because an attribute that is used in this article added at version 0.83.0.\nIn this article case, uninstall Hugo by apt-get then re-install by Homebrew because apt-get repository has not known latest version Hugo.\nThe re-install flow is the below.\nsudo apt-get remove -y hugo brew update brew install hugo When you execute brew update if the below error message displayed, please execute update-reset then execute brew update again.\nChange setting to the config file. Change the permalinks section like below. (The below case is just an example.)\n[permalinks] posts = \u0026#34;/:year/:month/:day/:filename/\u0026#34; # Before change posts = \u0026#34;/:sections/:filename\u0026#34; # After change If you use config.yaml or config.json, please refer to this page.\nHugo: URL Management\nExample I will put the example, which is I set up this site. If you are interested in that, check it!\norganizing the posts\nReference articles Install Hugo | Hugo: Homebrew (macOS)\nHomebrew 警告への対処（Another active Homebrew update process is already in progress）\nSection content not showing\n",
    "ref": "/blog/posts/hugo/organizing-hugo-posts/"
  },{
    "title": "What to do when an error message 'error: Failed to merge in the changes' appears when executing brew update.",
    "date": "",
    "description": "This article explains how to solve an error message 'error: Failed to merge in the changes' appears when executing brew update.",
    "body": "This article explains how to solve an error message \u0026lsquo;error: Failed to merge in the changes\u0026rsquo; appears when executing brew update.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Executing brew update-reset What does brew update-reset command do? Reference articles  Target audience Those who want to break through the errors that occur when executing brew update and update Homebrew.\nEnvironment  WSL 2 (Ubuntu 20.04 LTS)  Preconditions  Installed Homebrew  Executing brew update-reset Executing the below command to solve the problem.\nbrew update-reset That\u0026rsquo;s it!\nWhat does brew update-reset command do? Homebrew official and non-official remote repository information are reset, then reacquired and reconfigured.\nReference articles Homebrew Documentation: update-reset \ninstall brew error error: Failed to merge in the changes.\n",
    "ref": "/blog/posts/homebrew/homebrew-update-failed-to-merge-in-the-changes/"
  },{
    "title": "Add a robots.txt to the site Hugo builds.",
    "date": "",
    "description": "This article explains how to add robots.txt to the site Hugo builds.",
    "body": "This article explains how to add robots.txt to the site Hugo builds.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Add setting to the config file Create the robots.txt under the layouts directory Example Reference articles  Target audience  Those who want to add a robots.txt to the site Hugo builds.  Environment  Hugo (v0.94.2+extended linux/amd64 BuildDate=unknown)  Preconditions  Installed Hugo.  Add setting to the config file Add the below code to top-level in the config file.\nIn this site case, I added the below code because the config file type is toml.\nenableRobotsTXT = true If you use a YAML type config file, add the below code.\nenableRobotsTXT: true If you use a JSON type config file, add the below code.\n\u0026#34;enableRobotsTXT\u0026#34;: true Hugo will create the robots.txt that contents are below when generate the site.\nUser-agent: * Create the robots.txt under the layouts directory When you want to customize the robots.txt, you can use your robots.txt you create in the layouts directory.\nExample I will put the example, which is I set up this site. If you are interested in that, check it!\nadd robots.txt\nReference articles Hugo: Robots.txt File\n",
    "ref": "/blog/posts/hugo/add-robots-txt-to-hugo-site/"
  },{
    "title": "About installing Jest, and how to set up intellisense and how solving an import error.",
    "date": "",
    "description": "This article explains how to install Jest, how to set up intellisense and how solving an import error.",
    "body": "[17/03/2022] Fix the npm install command in the set up intellisense section.\nThis article explains how to install Jest, how to set up intellisense and how solving an import error.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Install Jest Set up intellisense Set up for solving an import error Digression  Why did I choose Jest for JavaScript testing? Why do I use both npm and yarn?   Reference articles  Target audience  Those who want to build Jest environment.  Environment  Windows 10 (Ver. 21H2, Build. 19044.1526) WSL 2 (Ubuntu 20.04 LTS) Visual Studio Code  Preconditions  Installed npm and yarn  Install Jest npm install --save-dev jest Set up intellisense Firstly, execute the below command to install Jest type definitions.\nnpm install --save-dev @types/jest Then create a jsconfig.json to the project root directory.\nContent is the below.\n{ \u0026#34;typeAcquisition\u0026#34;: { \u0026#34;include\u0026#34;: [ \u0026#34;jest\u0026#34; ] } } Set up for solving an import error You need to set up another thing because an import error is happening when you use Jest if you use it as it is.\nFirstly, execute the below command to build babel environment.\nyarn add --dev babel-jest @babel/core @babel/preset-env Then create a babel.config.cjs to the project root directory, which\u0026rsquo;s content is the below.\nmodule.exports = { presets: [ [ \u0026#34;@babel/preset-env\u0026#34;, { targets: { node: \u0026#34;current\u0026#34;, }, }, ], ], }; Digression Why did I choose Jest for JavaScript testing? From the below three reasons.\n The number of users is the highest in the world. (From npm trends) So it is easy to get information even if we are bothered by Jest. Easy to build environment Jest supports various JavaScript libraries and frameworks.  Why do I use both npm and yarn? Because yarn is needed to build the babel environment. (I mean npm can not build it.)\nReference articles Configuring Jest\nnpm trends (chai vs cypress vs jasmine vs jest vs mocha)\n",
    "ref": "/blog/posts/javascript/install-and-setting-jest/"
  },{
    "title": "Ignore auto-formatting a specific language on VS Code (Using Prettier)",
    "date": "",
    "description": "This article explains how to ignore auto-formatting a specific language on VS Code. (Using Prettier)",
    "body": "This article explains how to gnore auto-formatting a specific language on VS Code (Using Prettier).\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Edit setting.json  1. Open setting.json 2. Disable specific language auto-formatting function   Reference articles  Target audience  Those who want to switch the on-off auto-formatting function on a specific language  Environment  Visual Studio Code  Preconditions  Install Prettier (Prettier is VS Code extention)  Edit setting.json 1. Open setting.json Pushing Ctrl + Shift + P simultaneously then choosing Preferences: Open Settings(JSON).\nIf your environment is Mac OS, push Command + Shift + P instead of Ctrl + Shift + P.\n2. Disable specific language auto-formatting function Add the below line to a specific language section.\n\u0026#34;editor.formatOnSave\u0026#34;: false e.g. Add to markdown section.\n\u0026#34;[markdown]\u0026#34;: { \u0026#34;editor.formatOnSave\u0026#34;: false }, When a specific language section does not exist in the setting.json, you can add a new section yourself.\nYou can know from what language can use to add the new section that checking the below page.\nLanguage Identifiers#Known language identifiers\nReference articles prettier / prettier-vscode\n",
    "ref": "/blog/posts/visual-studio-code/ignore-auto-formatting-specific-language/"
  },{
    "title": "Set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04)",
    "date": "",
    "description": "This article explains how to set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04). Also, includes useful VS Code extensions for development with Haskell.",
    "body": "This article explains how to set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04).\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Set up the development environment  1. Install 2. Create a project 3. Prepare to enable build the project 4. Check setting up the development environment successful 5. Install VS Code extensions for development with Haskell   Reference articles  Target audience  Those who want to set up a Haskell development environment with VS Code on WSL2 (Ubuntu 20.04).  Environment  Windows 10 (Ver. 21H2, Build. 19044.1526) WSL 2 (Ubuntu 20.04 LTS)  Preconditions  Install WSL 2 (Ubuntu 20.04 LTS) to Windows 10 Install VS Code to WSL 2  Set up the development environment 1. Install wget -qO- https://get.haskellstack.org/ | sh 2. Create a project stack new [your project name] 3. Prepare to enable build the project cd [your project name] stack setup stack build 4. Check setting up the development environment successful stack exec [your project name]-exe Setting up has been succeeded when someFunc is shown up after executing the above command.\nIt is like below.\n$ stack exec [your project name]-exe someFunc 5. Install VS Code extensions for development with Haskell Finally, install the below extensions after launching VS Code\n Haskell\nHaskell Syntax Highlighting is installed together hlint\nhaskell-linter is installed together  That\u0026rsquo;s it!\nEnjoy your development life!\nReference articles Install/upgrade - The Haskell Tool Stack\n",
    "ref": "/blog/posts/haskell/setup-haskell-dev-env-on-wsl2/"
  },{
    "title": "Installing pyenv, and Python by pyenv on WSL (Ubuntu 18.04 LTS)",
    "date": "",
    "description": "This article explains how to install pyenv, and Python by pyenv on WSL (Ubuntu 18.04 LTS).",
    "body": "This article explains how to install pyenv, and Python by pyenv on WSL (Ubuntu 18.04 LTS).\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Installing pyenv Installing Python by pyenv  Installing libraries that need for installing Python Installing Python   Reference articles  Target audience  Those who want to install pyenv and Python on WSL.  Environment  WSL (Ubuntu 18.04 LTS)  Preconditions  Already installed git.  Installing pyenv Execution the following commands.\ngit clone https://github.com/pyenv/pyenv.git ~/.pyenv echo \u0026#39;export PYENV_ROOT=\u0026#34;$HOME/.pyenv\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile echo \u0026#39;export PATH=\u0026#34;$PYENV_ROOT/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile echo -e \u0026#39;if command -v pyenv 1\u0026gt;/dev/null 2\u0026gt;\u0026amp;1; then\\n eval \u0026#34;$(pyenv init -)\u0026#34;\\nfi\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile exec \u0026#34;$SHELL\u0026#34; Then reboot WSL for applying the setting.\nInstallation of pyenv is now complete.\nInstalling Python by pyenv Installing libraries that need for installing Python Execution the following command.\nsudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev Installing Python Execution the following command, then setting Python version that will use.\nIn this case, installing Python 3.8.2.\npyenv install 3.8.2 pyenv global 3.8.2 Reference articles GitHub - pyenv/pyenv: Simple Python version managementxxxxxxxxxx\r",
    "ref": "/blog/posts/python/installing-pyenv-pyenv-on-wsl-ubuntu1804/"
  },{
    "title": "Example codes about operating an embedded Vimeo video by JavaScript.",
    "date": "",
    "description": "Example codes about operating an embedded Vimeo video by JavaScript.",
    "body": "This article explains the example codes of operating the embedded Vimeo video by JavaScript.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Operating an embedded Vimeo video by JavaScript  Loading the embedded Vimeo video to a HTML file Create a JavaScript file for each HTML file Create a JavaScript to operating the Vimeo video.   Example code Reference articles  Target audience  Those who want to operating the Vimeo video by JavaScript.  Environment  JavaScript (ES2015)  Preconditions Nothing.\nOperating an embedded Vimeo video by JavaScript Loading the embedded Vimeo video to a HTML file First, load the embedded Vimeo video to a HTML file by iframe.\nIn this article case, using a sample Vimeo video.\n\u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;./javascript/index.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Specific your video URL on src attribute. --\u0026gt; \u0026lt;iframe id=\u0026#34;sample-player\u0026#34; src=\u0026#34;https://player.vimeo.com/video/76979871\u0026#34; width=\u0026#34;640\u0026#34; height=\u0026#34;360\u0026#34; frameborder=\u0026#34;0\u0026#34; webkitallowfullscreen mozallowfullscreen allowfullscreen allow=\u0026#34;autoplay\u0026#34; \u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button id=\u0026#34;play-button\u0026#34;\u0026gt;play\u0026lt;/button\u0026gt; \u0026lt;button id=\u0026#34;pause-button\u0026#34;\u0026gt;pause\u0026lt;/button\u0026gt; \u0026lt;button id=\u0026#34;play-pause-button\u0026#34;\u0026gt;play and pause\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Create a JavaScript file for each HTML file If you do not create a JavaScript file each HTML file, ignore this chapter, please.\nNext, create a JavaScript file for each HTML file, and loading a function of operation any embedded Vimeo videos.\nWhat about \u0026ldquo;vimeo-api-practice.js\u0026rdquo; I will explain on next chapter.\nimport * as vimeo from \u0026#39;./vimeo-api-practice.js\u0026#39;; window.onload = () =\u0026gt; { let playerInformation = new vimeo.PlayerInformation( \u0026#39;player\u0026#39;, { playButtonId: \u0026#39;play-button\u0026#39;, pauseButtonId: \u0026#39;pause-button\u0026#39;, playPauseButtonId: \u0026#39;play-pause-button\u0026#39; } ); vimeo.settingPlayer(playerInformation); } Create a JavaScript to operating the Vimeo video. Finally, create a JavaScript file to operating an embedded Vimeo video.\nFirst, load the Vimeo API in this file so that we can use this file as a common part.\nNext, recieve player id and button ids from caller by arguments, then setting any events.\nThis chapter explains only play and pause, but you can do other operations. When you would like to do another operations, please read the official references.\nIf you would like to use the following codes, please check my GitHub repository.\nlet tag = document.createElement(\u0026#39;script\u0026#39;); tag.src = \u0026#39;https://player.vimeo.com/api/player.js\u0026#39;; document.getElementsByTagName(\u0026#39;head\u0026#39;)[0].appendChild(tag); export function settingPlayer(playerInformation) { let iframe = document.getElementById(playerInformation.playerId); let player = new Vimeo.Player(iframe); // Setting play the video by play button.  document.getElementById(playerInformation.playButtonId) .addEventListener(\u0026#34;click\u0026#34;, event =\u0026gt; { player.play(); }); // Setting pause the video by play button.  document.getElementById(playerInformation.pauseButtonId) .addEventListener(\u0026#34;click\u0026#34;, event =\u0026gt; { player.pause(); }); // Setting play and pause the video by play button.  // When the video is playing, pause it. And when the video is pausing, play it.  document.getElementById(playerInformation.playPauseButtonId) .addEventListener(\u0026#34;click\u0026#34;, event =\u0026gt; { player.getPaused().then(paused =\u0026gt; { paused ? player.play() : player.pause(); }); }); } export class PlayerInformation { constructor(playerId, buttonIds) { this.playerId = playerId; if (buttonIds.playButtonId) this.playButtonId = buttonIds.playButtonId; if (buttonIds.pauseButtonId) this.pauseButtonId = buttonIds.pauseButtonId; if (buttonIds.playPauseButtonId) this.playPauseButtonId = buttonIds.playPauseButtonId; } } Example code koki-nakamura22/vimeo-js-example: This repository is example.xxxxxxxxxx\rReference articles Player SDK: The Basics | Vimeo Developerxxxxxxxxxx\rvimeo/player.js: Interact with and control an embedded Vimeo Player.xxxxxxxxxx\r",
    "ref": "/blog/posts/javascript/operating-vimeo-by-js/"
  },{
    "title": "How to build an environment of Ruby on Rails tutorial on WSL",
    "date": "",
    "description": "Explain how to build a environment of Ruby on Rails tutorial on WSL.",
    "body": "This article explains how to build the environment of Ruby on Rails tutorial on WSL.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Building the environment of Ruby on Rails tutorial Reference articles  Target audience  Those who want to build the environment of Ruby on Rails tutorial on WSL.  Environment  Windows 10 (1903) Ubuntu (Distribution of WSL, have to use without version.)  Preconditions  Enable the function of WSL Installed Ubuntu (WSL)  Building the environment of Ruby on Rails tutorial Execute the following commands.\nThat\u0026rsquo;s it!\n# Install necessary tools sudo apt update sudo apt upgrade -y sudo apt install autoconf bison build-essential libssl1.0-dev libyaml-dev libreadline-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm-dev sqlite3 libsqlite3-dev nodejs-dev node-gyp npm git -y sudo npm install --global yarn # Install rbenv git clone https://github.com/rbenv/rbenv.git ~/.rbenv echo \u0026#39;export PATH=\u0026#34;$HOME/.rbenv/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc echo \u0026#39;eval \u0026#34;$(rbenv init -)\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc # Install ruby-build git clone https://github.com/rbenv/ruby-build.git \u0026#34;$(rbenv root)\u0026#34;/plugins/ruby-build # Install Ruby rbenv install 2.6.5 rbenv global 2.6.5 # Install Ruby on Rails gem install rails -v 5.1.6 --no-document Reference articles Rails Girls - Japanesexxxxxxxxxx\r第1章 ゼロからデプロイまで - Railsチュートリアルxxxxxxxxxx\r",
    "ref": "/blog/posts/ruby-on-rails/building-env-of-rails-tutorial-wsl/"
  },{
    "title": "Deploying articles on Hugo blog automatically",
    "date": "",
    "description": "Explain how to deploy articles on Hugo blog automatically.",
    "body": "This article explains how to deploy articles on Hugo blog automatically.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions How to deploy articles automatically  Make batch file Make PowerShell script file How to use script files    Target audience  Those who want to deploy articles automatically.  Environment  Windows 10 (1903) Command Prompt Power Shell (5.1.18362.145) Hugo (0.57.2) Hugo-extended (0.58.2)  Preconditions  Manage blog posts on GitHub. Cloned Hugo blog repository as \u0026ldquo;public\u0026rdquo; directory.  How to deploy articles automatically Make script files, then execute it.\nIn this case, use batch file and Powershell script file because use batch file is easier to execute PowerShell script file.\nMake batch file Make \u0026ldquo;deploy.bat\u0026rdquo; file in blog root directory and copy and paste the following codes to it.\npowershell -NoProfile -ExecutionPolicy Unrestricted .\\deploy.ps1 Make PowerShell script file Make \u0026ldquo;deploy.ps1\u0026rdquo; file in blog root directory and copy and paste the following codes to it.\n# Build the project. hugo # Go to public directory. Set-Location .\\public # Add changes to git. git add . # Create a commit message. $dateTime = Get-Date -format \u0026#34;yyyy-MM-dd HH:mm:ss K\u0026#34; $commitMsg = \u0026#34;Site updated: ${dateTime}\u0026#34; # Commit. git commit -m $commitMsg # Push source and build repos. git push origin master # Come back to the project root. Set-Location .\\.. Write-Host \u0026#34;The web page has been updated!\u0026#34; -ForegroundColor \u0026#34;Cyan\u0026#34; How to use script files Execute \u0026ldquo;deploy.bat\u0026rdquo;.\nThat it! It\u0026rsquo;s easy!\nHave a good blog life!!\n",
    "ref": "/blog/posts/hugo/deploying-articles-on-hugo-automatically/"
  },{
    "title": "Adjusting the display position of the  link destination in the same page (anchor)",
    "date": "",
    "description": "Explain how to adjust the display position of the  link destination in the same page (anchor).",
    "body": "This article explains how to adjust the display position of the \u0026lt;a\u0026gt; link destination in the same page.\nIf we are using a fixed header, we need to adjust the position of the anchor when clicked the \u0026lt;a\u0026gt; link.\nBecause the anchor is hidden behind the header.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Adjusting link destinations position Reference articles  Target audience  Those who want to adjust the display position of the \u0026lt;a\u0026gt; link destination in the same page.  Environment  CSS3  Preconditions Nothing.\nAdjusting link destinations position Setting the following codes to the target anchor tag to add-on.css.\nWhen you set it, you must set the same number to padding-top and margin-top.\n#target-tag { display: block; padding-top: 60px; margin-top: -60px; } In this blog, I adjust the headings in the post using the following codes.\n/* For link destinations adjustment. */ #site-main .post .content h1, #site-main .post .content h2, #site-main .post .content h3, #site-main .post .content h4, #site-main .post .content h5, #site-main .post .content h6 { display: block; padding-top: 60px; margin-top: -60px; } Reference articles ページ内リンクのジャンプ先の位置を複雑なタグは無しでCSSだけで調整する方法 | 大阪のホームページ制作会社YCOMxxxxxxxxxx\r",
    "ref": "/blog/posts/css/adjusting-link-dests-position/"
  },{
    "title": "Creating a development environment of Node.js (Use Express and VS Code)",
    "date": "",
    "description": "Explain how to create a development environment of Node.js (Use Express) including a function of hot reload. (VS Code)",
    "body": "This article explains how to create a development environment of Node.js (Use Express) including a function of hot reload. (VS Code)\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Creating the development environment  Make project directory Install Express  Install Create a environment for test   Install Nodemon globally  Install Make a setting file Make and edit launch.json Edit package.json   How to execute in debug mode   Reference articles  Target audience  Those who want to create the development environment of Node.js (Express) on VS Code.  Environment  Windows 10 (1903) Visual Studio Code (1.38.1) Node.js (v10.16.3) npm (6.11.2)  Preconditions  Installed Node.js, npm and VS Code  Creating the development environment Make project directory Execute the following command to make the directory.\nUse the command that is the same on Windows, Mac and Linux.\nmkdir [project name] \nInstall Express Install First, Move to the directory that was made.\nThen execute the following command to install Express locally.\nnpm install express --save-dev Create a environment for test First, execute the following command to init npm.\nnpm init Then create a app.js file and copy the following codes to the file.\nconst express = require(\u0026#34;express\u0026#34;); const app = express(); app.get(\u0026#34;/\u0026#34;, (req, res) =\u0026gt; { res.send(\u0026#34;Hello World!\u0026#34;); }); const server = app.listen(3000, () =\u0026gt; { const host = server.address().address; const port = server.address().port; console.log(\u0026#34;Example app listening at http://%s:%s\u0026#34;, host, port); }); Creating a developing environment of Node.js (Express) that finished.\nNext, setting up an environment of hot reload. Install Nodemon globally Use Nodemon to creating an environment of hot reload.\nInstall Execute the following command to install nodemon globally.\nnpm install nodemon -g Make a setting file Make .nodemon.json file at project\u0026rsquo;s root path.\nThen paste the following codes to the file.\n{ \u0026#34;watch\u0026#34;: \u0026#34;./*\u0026#34;, \u0026#34;ext\u0026#34;: \u0026#34;js,json\u0026#34;, \u0026#34;exec\u0026#34;: \u0026#34;node ./app\u0026#34; } Make and edit launch.json First, make launch.json by the following work.\n[Debug] in a left menu -\u0026gt; [Gear icon] -\u0026gt; Choose \u0026ldquo;Node.js\u0026rdquo; on Select Environment. Then replace the contents of \u0026ldquo;configuration\u0026rdquo; from source to the following code.\n{ \u0026#34;type\u0026#34;: \u0026#34;node\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Node: Nodemon\u0026#34;, \u0026#34;processId\u0026#34;: \u0026#34;${command:PickProcess}\u0026#34;, \u0026#34;restart\u0026#34;: true, \u0026#34;protocol\u0026#34;: \u0026#34;inspector\u0026#34; } The following codes are complete form.\n{ // Use IntelliSense to learn about possible attributes.  // Hover to view descriptions of existing attributes.  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387  \u0026#34;version\u0026#34;: \u0026#34;0.2.0\u0026#34;, \u0026#34;configurations\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;node\u0026#34;, \u0026#34;request\u0026#34;: \u0026#34;attach\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;Node: Nodemon\u0026#34;, \u0026#34;processId\u0026#34;: \u0026#34;${command:PickProcess}\u0026#34;, \u0026#34;restart\u0026#34;: true, \u0026#34;protocol\u0026#34;: \u0026#34;inspector\u0026#34; } ] } Edit package.json Finally, adding a command to package.json for executing program.\nAdding the following command to \u0026ldquo;script\u0026rdquo; in the package.json.\n\u0026#34;debug\u0026#34;: \u0026#34;nodemon --inspect app.js\u0026#34; \nThis is the end of creating the development environment.\rHow to execute in debug mode To start the program in debug mode, execute the following command at project\u0026rsquo;s root path.\nnpm run debug Then press \u0026ldquo;F5\u0026rdquo; key on VS Code.\nIf VS Code ask for you about \u0026ldquo;Pick the node.js process to attach to\u0026rdquo;, choose \u0026ldquo;node \u0026ndash;inspect app.js\u0026rdquo;.\nWhen you want to exit, press F5 or click \u0026ldquo;Disconnect\u0026rdquo; in a debug menu. And, press Ctrl + C in Command Prompt or PowerShell.\nReference articles Installing Expressxxxxxxxxxx\rExpress \"Hello World\" examplexxxxxxxxxx\rremy/nodemon: Monitor for any changes in your node.js application and automatically restart the server - perfect for developmentxxxxxxxxxx",
    "ref": "/blog/posts/nodejs/creating-dev-env-of-nodejs/"
  },{
    "title": "Making a table of contents of Markdown automatically",
    "date": "",
    "description": "Explain how to make a table of contents of Markdown automatically.",
    "body": "This article explains how to make a table of contents of Markdown automatically..\nThe following lists are the table of contents about this article.\n Target audience Preconditions Install doctoc Making a table of contents of Markdown automatically Reference articles  Target audience  Those who want to make a table of contents of Markdown automatically.  Preconditions  Installed Node.js  Install doctoc Execute the following command.\nnpm install -g doctoc Making a table of contents of Markdown automatically Specify the directory where contains the Markdown file for making the table of contents exists in the doctoc parameter, and execute it. For the following example, specifying current directory.\ndoctoc . Wait to show \u0026ldquo;Everything is OK.\u0026rdquo;. Then open the file, the table of contents has been added to the top between the following comments.\n\u0026lt;!-- START doctoc generated TOC please keep comment here to allow auto update --\u0026gt; \u0026lt;!-- DON\u0026#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --\u0026gt; **Table of Contents** *generated with [DocToc](https://github.com/t \u0026lt;!-- END doctoc generated TOC please keep comment here to allow auto update --\u0026gt; After that, use it freely.\nBy the way, the table of contents of this article was output in the following form.\n- [Target audience](#target-audience) - [Preconditions](#preconditions) - [Install doctoc](#install-doctoc) - [Making a table of contents of Markdown automatically](#making-a-table-of-contents-of-markdown-automatically) - [Reference articles](#reference-articles) Reference articles thlorenz/doctoc: 📜 Generates table of contents for markdown files inside local git repository. Links are compatible with anchors generated by github or other sites.xxxxxxxxxx\r",
    "ref": "/blog/posts/markdown/making-table-of-contents-of-markdown/"
  },{
    "title": "Adding copy code button to Hugo blog",
    "date": "",
    "description": "Explain how to add a copy code button on Hugo blog.",
    "body": "This article explains how to add a copy code button on Hugo blog.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Adding copy code button  Adding JavaScript code Adding CSS code   Reference articles  Target audience  Those who want to add a copy code button to code block on Hugo blog.  Environment  Hugo 0.57.2 Hugo-extended 0.58.2  Preconditions  Installed Hugo and Hugo-extended  Adding copy code button Adding JavaScript code Add the following code to static/js/add-on.js.\nI use IIFE (Immediately Invoked Function Expression) because I want to narrow the scope of a variable.\n(() =\u0026gt; { \u0026#39;use strict\u0026#39;; if(!document.queryCommandSupported(\u0026#39;copy\u0026#39;)) { return; } function flashCopyMessage(el, msg) { el.textContent = msg; setTimeout(() =\u0026gt; { el.textContent = \u0026#34;Copy\u0026#34;; }, 1000); } function selectText(node) { let selection = window.getSelection(); let range = document.createRange(); if (node.childElementCount === 2) { // Skip the title.  range.selectNodeContents(node.children[1]); } else { range.selectNodeContents(node); } selection.removeAllRanges(); selection.addRange(range); return selection; } function addCopyButton(containerEl) { let copyBtn = document.createElement(\u0026#34;button\u0026#34;); copyBtn.className = \u0026#34;highlight-copy-btn\u0026#34;; copyBtn.textContent = \u0026#34;Copy\u0026#34;; let codeEl = containerEl.firstElementChild; copyBtn.addEventListener(\u0026#39;click\u0026#39;, () =\u0026gt; { try { let selection = selectText(codeEl); document.execCommand(\u0026#39;copy\u0026#39;); selection.removeAllRanges(); flashCopyMessage(copyBtn, \u0026#39;Copied!\u0026#39;) } catch(e) { console \u0026amp;\u0026amp; console.log(e); flashCopyMessage(copyBtn, \u0026#39;Failed :\\\u0026#39;(\u0026#39;) } }); containerEl.appendChild(copyBtn); } // Add copy button to code blocks  let highlightBlocks = document.getElementsByClassName(\u0026#39;highlight\u0026#39;); Array.prototype.forEach.call(highlightBlocks, addCopyButton); })(); Adding CSS code Add the following code to static/css/add-on.css.\n.highlight { position: relative; } .highlight pre { padding-right: 75px; } .highlight-copy-btn { position: absolute; bottom: 7px; right: 7px; border: 0; border-radius: 4px; padding: 1px; font-size: 0.7em; line-height: 1.8; color: #fff; background-color: #777; min-width: 55px; text-align: center; } .highlight-copy-btn:hover { background-color: #666; } \nThat's it!\rReference articles Adding click-to-copy buttons to a Hugo powered blogxxxxxxxxxx\r",
    "ref": "/blog/posts/hugo/hugo-adding-copy-button/"
  },{
    "title": "How to add a title to code block on Hugo blog",
    "date": "",
    "description": "This article explains how to add a title to code block on Hugo blog.",
    "body": "This article explains how to add a title to code block on Hugo blog.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Add a title to code block  Add JavaScript code Add CSS code How to set a title   Reference articles  Target audience  Those who want to add a title to code block on Hugo blog.  Environment  Hugo 0.57.2 Hugo-extended 0.58.2  Preconditions  Installed Hugo and Hugo-extended  Add a title to code block Add JavaScript code Add the following code to static/js/add-on.js.\nI use IIFE (Immediately Invoked Function Expression) because I want to narrow the scope of a variable.\n(function addTitleToCodeBlock() { let list = document.body.getElementsByClassName(\u0026#34;highlight\u0026#34;); for (i = 0; i \u0026lt;= list.length - 1; i++) { let code = list[i].firstElementChild.firstElementChild; let codeName = code ? code.className.split(\u0026#34;:\u0026#34;)[1] : null; if (codeName) { let div = document.createElement(\u0026#34;div\u0026#34;); div.textContent = codeName; div.classList.add(\u0026#34;code-name\u0026#34;); code.parentNode.insertBefore(div, code); } } }()); Add CSS code Add the following code to static/css/add-on.css.\npre.chroma code { margin-top: -28px; padding-top: 40px; padding-bottom: 12px; } .code-name { display: inline-block; position: relative; padding: 4px 8px; background-color: #E7E9EB; color: #485A60; font-size: 13px; font-weight: 400; } How to set a title When you use code block, add \u0026ldquo;:[title]\u0026rdquo; to after language name.\nThe following thing is example.\n```javascript:test.js\rconsole.log(\u0026quot;Have a nice blog life!!!\u0026quot;);\r```\r\nThat's it! It's so easy! Thank you very much author of above codes! Guys, have a nice blog life!\rReference articles HugoのコードブロックにQiitaのようなTitleをつける | AABrainxxxxxxxxxx\r",
    "ref": "/blog/posts/hugo/hugo-code-block-title/"
  },{
    "title": "How to add a function of syntax highlight to Hugo blog",
    "date": "",
    "description": "This article explains how to add a function of syntax highlight on Hugo blog.",
    "body": "This article explains how to add a function of syntax highlight on Hugo blog.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Add a function of syntax highlight Reference articles  Target audience  Those who want to add a function of syntax highlight on Hugo blog.  Environment  Hugo 0.57.2 Hugo-extended 0.58.2  Preconditions  Installed Hugo and Hugo-extended  Add a function of syntax highlight Add the following codes to config.toml.\npygmentsCodefences = true pygmentsStyle = \u0026#34;fruity\u0026#34; You can chose a style on pygmentsStyle from the below pages.\nChroma Style Galleryxxxxxxxxxx\rThe above code chooses style that is \u0026ldquo;fruity\u0026rdquo;.\nReference articles Syntax highlighting in Hugo with Chroma | zwbetzxxxxxxxxxx\r",
    "ref": "/blog/posts/hugo/hugo-syntax-highlight/"
  },{
    "title": "How to install Ruby on Rails on Windows 10",
    "date": "",
    "description": "This article explain how to install Ruby on Rails on Windows 10.",
    "body": "This article explain how to install Ruby on Rails on Windows 10.\nThe following lists are the table of contents about this article.\n Target audience Environment Preconditions Install How to check installed packages Reference articles  Target audience  Those who want to create Ruby on Rails environment on Windows 10.  Environment  Windows 10 (1903) Chocolatey (0.10.15)  Preconditions  Already installed Chocolatey  Install Execute the following commands on Command Prompt or PowerShell as administrator.\nREM Install Yarn choco install yarn -y REM Install Ruby choco install ruby -y REM Install msys2 choco install msys2 --params \u0026#34;/NoUpdate\u0026#34; -y refreshenv ridk install 2 3 REM Install SQLite gem uninstall sqlite3 --all ridk exec pacman -S mingw-w64-x86_64-sqlite3 gem install sqlite3 --platform ruby REM Install bundle gem install bundle REM Install Ruby on Rails gem install rails If you want to specify version Ruby and Ruby on Rails, replace install Ruby and Ruby on Rails commands.\nThe following commands are an example. When you install Ruby 2.4.2.2, use the following command instead of \u0026ldquo;choco install ruby -y\u0026rdquo;.\nchoco install ruby --version=2.4.2.2 -y Also, when you install Ruby on Rails 5.2.2, use the following command instead of \u0026ldquo;gem install bundle rails\u0026rdquo;.\ngem install rails -v 5.2.2 How to check installed packages Execute the following commands on Command Prompt or Power Shell.\nruby -v rails -v You can check each version. The following information is an example.\nC:\\Users\\testuser\u0026gt;ruby -v ruby 2.6.4p104 (2019-08-28 revision 67798) [x64-mingw32] C:\\Users\\testuser\u0026gt;rails -v Rails 6.0.0 Reference articles chocolateyでruby on rails環境を構築 - Qiitaxxxxxxxxxx\rRuby on Railsの環境構築をしてみよう！(Windows) | プログラミングの入門なら基礎から学べるProgate[プロゲート]xxxxxxxxxx\r",
    "ref": "/blog/posts/ruby-on-rails/how-to-install-rails-on-windows/"
  },{
    "title": "How to install Chocolatey on Windows 10.",
    "date": "",
    "description": "This article explain how to install Chocolatey on Windows 10.",
    "body": "This article explain how to install Chocolatey on Windows 10.\nChocolatey is Package Management Tools that is like apt-get or yum on Linux.\nThe following lists are the table of contents about this article.\n Target audience How to install Confirm Chocolatey is installed Install something to example How to check installed packages How to uninstall package How to update package Reference articles  Target audience  Those who want to use functions like apt-get or yum on Windows.  How to install Execute the following command on Command Prompt as Administrator.\n@\u0026#34;%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u0026#34; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \u0026#34;iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;))\u0026#34; \u0026amp;\u0026amp; SET \u0026#34;PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\u0026#34; Or, execute the following command on PowerShell as Administrator.\nSet-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://chocolatey.org/install.ps1\u0026#39;)) Confirm Chocolatey is installed After execute install, execute the following command on Command Prompt or PowerShell.\nchoco -v If version information appears like the following information, install was a success.\nC:\\WINDOWS\\system32\u0026gt;choco -v 0.10.15 Install something to example Chocolatey Software | Packagesxxxxxxxxxx\rRefer to the above article, let\u0026rsquo;s install 7zip as a test.\nExecute the following command on Command Prompt or PowerShell as Administrator.\nWhen installing it, Command Prompt and Powershell will ask you if you want to continue. Press \u0026ldquo;Y\u0026rdquo; to continue a process.\nchoco install 7zip How to check installed packages Execute the following command on Command Prompt or PowerShell.\nchoco list -localonly How to uninstall package Execute the following command on Command Prompt or PowerShell.\nWhen uninstalling a package, you have to specify package that uninstalling.\nAnd Command Prompt and Powershell will ask you if you want to continue. Press \u0026ldquo;Y\u0026rdquo; to continue a process.\nchoco install [package name] For example, if uninstalling 7zip, execute the following command on Command Prompt or PowerShell.\nchoco uninstall 7zip How to update package If you want to update all packages, execute the following command,\nchoco update all if you want to specify package, execute the following command on Command Prompt or PowerShell.\nchoco update [package name] Reference articles Chocolatey Software | Installationxxxxxxxxxx\rはじめてのChocolatey - nuits.jp blogxxxxxxxxxx\r",
    "ref": "/blog/posts/chocolatey/how-to-install-chocolatey/"
  }]
